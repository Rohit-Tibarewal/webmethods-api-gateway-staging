{
  "apiDefinition" : {
    "info" : {
      "description" : "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
      "version" : "1.0.7",
      "title" : "Swagger Petstore Updated",
      "termsOfService" : "http://swagger.io/terms/",
      "contact" : {
        "email" : "apiteam@swagger.io"
      },
      "license" : {
        "name" : "Apache 2.0",
        "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host" : "petstore.swagger.io",
    "basePath" : "/v2",
    "tags" : [ {
      "name" : "pet",
      "description" : "Everything about your Pets",
      "externalDocs" : {
        "description" : "Find out more",
        "url" : "http://swagger.io"
      }
    } ],
    "schemes" : [ "https", "http" ],
    "security" : [ ],
    "paths" : {
      "/pet/findByStatus" : {
        "get" : {
          "tags" : [ "pet" ],
          "summary" : "Finds Pets by status",
          "description" : "Multiple status values can be provided with comma separated strings",
          "operationId" : "findPetsByStatus",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "query",
            "parameterSchema" : {
              "description" : "Status values that need to be considered for filter",
              "readOnly" : false,
              "type" : "array",
              "items" : {
                "default" : "available",
                "type" : "string",
                "enum" : [ "available", "pending", "sold" ]
              }
            },
            "name" : "status",
            "description" : "Status values that need to be considered for filter",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "content" : {
                "application/xml" : {
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Pet"
                    }
                  }
                },
                "application/json" : {
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Pet"
                    }
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid status value"
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:pets", "read:pets" ]
          } ],
          "enabled" : true,
          "scopes" : [ ]
        },
        "parameters" : [ ],
        "scopes" : [ ],
        "enabled" : true
      },
      "/pet/{petId}/uploadImage" : {
        "post" : {
          "tags" : [ "pet" ],
          "summary" : "uploads an image",
          "description" : "",
          "operationId" : "uploadFile",
          "consumes" : [ "multipart/form-data" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "path",
            "parameterSchema" : {
              "format" : "int64",
              "description" : "ID of pet to update",
              "readOnly" : false,
              "type" : "integer"
            },
            "name" : "petId",
            "description" : "ID of pet to update",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "content" : {
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/ApiResponse"
                  }
                }
              }
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:pets", "read:pets" ]
          } ],
          "enabled" : true,
          "scopes" : [ ],
          "requestBody" : {
            "content" : {
              "multipart/form-data" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "file" : {
                      "type" : "string",
                      "description" : "file to upload",
                      "format" : "binary",
                      "readOnly" : false
                    },
                    "additionalMetadata" : {
                      "type" : "string",
                      "description" : "Additional data to pass to server",
                      "readOnly" : false
                    }
                  }
                }
              }
            },
            "required" : true
          }
        },
        "parameters" : [ ],
        "scopes" : [ ],
        "enabled" : true
      },
      "/pet" : {
        "put" : {
          "tags" : [ "pet" ],
          "summary" : "Update an existing pet",
          "description" : "",
          "operationId" : "updatePet",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ ],
          "responses" : {
            "400" : {
              "description" : "Invalid ID supplied"
            },
            "404" : {
              "description" : "Pet not found"
            },
            "405" : {
              "description" : "Validation exception"
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:pets", "read:pets" ]
          } ],
          "enabled" : true,
          "scopes" : [ ],
          "requestBody" : {
            "description" : "Pet object that needs to be added to the store",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pet"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pet"
                }
              }
            },
            "required" : true
          }
        },
        "post" : {
          "tags" : [ "pet" ],
          "summary" : "Add a new pet to the store",
          "description" : "",
          "operationId" : "addPet",
          "consumes" : [ "application/json", "application/xml" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ ],
          "responses" : {
            "405" : {
              "description" : "Invalid input"
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:pets", "read:pets" ]
          } ],
          "enabled" : true,
          "scopes" : [ ],
          "requestBody" : {
            "description" : "Pet object that needs to be added to the store",
            "content" : {
              "application/xml" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pet"
                }
              },
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pet"
                }
              }
            },
            "required" : true
          }
        },
        "parameters" : [ ],
        "scopes" : [ ],
        "enabled" : true
      },
      "/pet/findByTags" : {
        "get" : {
          "tags" : [ "pet" ],
          "summary" : "Finds Pets by tags",
          "description" : "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
          "operationId" : "findPetsByTags",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "query",
            "parameterSchema" : {
              "description" : "Tags to filter by",
              "readOnly" : false,
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            },
            "name" : "tags",
            "description" : "Tags to filter by",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "content" : {
                "application/xml" : {
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Pet"
                    }
                  }
                },
                "application/json" : {
                  "schema" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/Pet"
                    }
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid tag value"
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:pets", "read:pets" ]
          } ],
          "deprecated" : true,
          "enabled" : true,
          "scopes" : [ ]
        },
        "parameters" : [ ],
        "scopes" : [ ],
        "enabled" : true
      },
      "/pet/{petId}" : {
        "get" : {
          "tags" : [ "pet" ],
          "summary" : "Find pet by ID",
          "description" : "Returns a single pet",
          "operationId" : "getPetById",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "path",
            "parameterSchema" : {
              "format" : "int64",
              "description" : "ID of pet to return",
              "readOnly" : false,
              "type" : "integer"
            },
            "name" : "petId",
            "description" : "ID of pet to return",
            "required" : true
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "content" : {
                "application/xml" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/Pet"
                  }
                },
                "application/json" : {
                  "schema" : {
                    "$ref" : "#/components/schemas/Pet"
                  }
                }
              }
            },
            "400" : {
              "description" : "Invalid ID supplied"
            },
            "404" : {
              "description" : "Pet not found"
            }
          },
          "security" : [ {
            "api_key" : [ ]
          } ],
          "enabled" : true,
          "scopes" : [ ]
        },
        "post" : {
          "tags" : [ "pet" ],
          "summary" : "Updates a pet in the store with form data",
          "description" : "",
          "operationId" : "updatePetWithForm",
          "consumes" : [ "application/x-www-form-urlencoded" ],
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "path",
            "parameterSchema" : {
              "format" : "int64",
              "description" : "ID of pet that needs to be updated",
              "readOnly" : false,
              "type" : "integer"
            },
            "name" : "petId",
            "description" : "ID of pet that needs to be updated",
            "required" : true
          } ],
          "responses" : {
            "405" : {
              "description" : "Invalid input"
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:pets", "read:pets" ]
          } ],
          "enabled" : true,
          "scopes" : [ ],
          "requestBody" : {
            "content" : {
              "application/x-www-form-urlencoded" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Updated name of the pet",
                      "readOnly" : false
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "Updated status of the pet",
                      "readOnly" : false
                    }
                  }
                }
              }
            },
            "required" : true
          }
        },
        "delete" : {
          "tags" : [ "pet" ],
          "summary" : "Deletes a pet",
          "description" : "",
          "operationId" : "deletePet",
          "produces" : [ "application/json", "application/xml" ],
          "parameters" : [ {
            "in" : "header",
            "parameterSchema" : {
              "readOnly" : false,
              "type" : "string"
            },
            "name" : "api_key",
            "required" : false
          }, {
            "in" : "path",
            "parameterSchema" : {
              "format" : "int64",
              "description" : "Pet id to delete",
              "readOnly" : false,
              "type" : "integer"
            },
            "name" : "petId",
            "description" : "Pet id to delete",
            "required" : true
          } ],
          "responses" : {
            "400" : {
              "description" : "Invalid ID supplied"
            },
            "404" : {
              "description" : "Pet not found"
            }
          },
          "security" : [ {
            "petstore_auth" : [ "write:pets", "read:pets" ]
          } ],
          "enabled" : true,
          "scopes" : [ ]
        },
        "parameters" : [ ],
        "scopes" : [ ],
        "enabled" : true
      }
    },
    "securityDefinitions" : {
      "petstore_auth" : {
        "authorizationUrl" : "https://petstore.swagger.io/oauth/authorize",
        "scopes" : {
          "write:pets" : "modify pets in your account",
          "read:pets" : "read your pets"
        },
        "type" : "oauth2",
        "flow" : "implicit"
      },
      "api_key" : {
        "in" : "header",
        "name" : "api_key",
        "type" : "apiKey"
      }
    },
    "definitions" : { },
    "baseUriParameters" : [ ],
    "externalDocs" : [ {
      "description" : "Find out more about Swagger",
      "url" : "http://swagger.io"
    } ],
    "servers" : [ {
      "url" : "https://petstore.swagger.io/v2"
    }, {
      "url" : "http://petstore.swagger.io/v2"
    } ],
    "components" : {
      "schemas" : {
        "Order" : {
          "type" : "object",
          "properties" : {
            "petId" : {
              "type" : "integer",
              "format" : "int64"
            },
            "quantity" : {
              "type" : "integer",
              "format" : "int32"
            },
            "id" : {
              "type" : "integer",
              "format" : "int64"
            },
            "shipDate" : {
              "type" : "string",
              "format" : "date-time"
            },
            "complete" : {
              "type" : "boolean"
            },
            "status" : {
              "type" : "string",
              "description" : "Order Status",
              "enum" : [ "placed", "approved", "delivered" ]
            }
          },
          "xml" : {
            "name" : "Order"
          }
        },
        "Category" : {
          "type" : "object",
          "properties" : {
            "name" : {
              "type" : "string"
            },
            "id" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "xml" : {
            "name" : "Category"
          }
        },
        "User" : {
          "type" : "object",
          "properties" : {
            "firstName" : {
              "type" : "string"
            },
            "lastName" : {
              "type" : "string"
            },
            "password" : {
              "type" : "string"
            },
            "userStatus" : {
              "type" : "integer",
              "description" : "User Status",
              "format" : "int32"
            },
            "phone" : {
              "type" : "string"
            },
            "id" : {
              "type" : "integer",
              "format" : "int64"
            },
            "email" : {
              "type" : "string"
            },
            "username" : {
              "type" : "string"
            }
          },
          "xml" : {
            "name" : "User"
          }
        },
        "Tag" : {
          "type" : "object",
          "properties" : {
            "name" : {
              "type" : "string"
            },
            "id" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "xml" : {
            "name" : "Tag"
          }
        },
        "ApiResponse" : {
          "type" : "object",
          "properties" : {
            "code" : {
              "type" : "integer",
              "format" : "int32"
            },
            "type" : {
              "type" : "string"
            },
            "message" : {
              "type" : "string"
            }
          }
        },
        "Pet" : {
          "required" : [ "photoUrls", "name" ],
          "type" : "object",
          "properties" : {
            "photoUrls" : {
              "type" : "array",
              "xml" : {
                "wrapped" : true
              },
              "items" : {
                "type" : "string",
                "xml" : {
                  "name" : "photoUrl"
                }
              }
            },
            "name" : {
              "type" : "string",
              "example" : "doggie"
            },
            "id" : {
              "type" : "integer",
              "format" : "int64"
            },
            "category" : {
              "$ref" : "#/components/schemas/Category"
            },
            "tags" : {
              "type" : "array",
              "xml" : {
                "wrapped" : true
              },
              "items" : {
                "$ref" : "#/components/schemas/Tag",
                "xml" : {
                  "name" : "tag"
                }
              }
            },
            "status" : {
              "type" : "string",
              "description" : "pet status in the store",
              "enum" : [ "available", "pending", "sold" ]
            }
          },
          "xml" : {
            "name" : "Pet"
          }
        }
      }
    },
    "type" : "rest"
  },
  "nativeEndpoint" : [ {
    "passSecurityHeaders" : true,
    "uri" : "http://petstore.swagger.io/v2",
    "connectionTimeoutDuration" : 0,
    "alias" : false
  }, {
    "passSecurityHeaders" : true,
    "uri" : "https://petstore.swagger.io/v2",
    "connectionTimeoutDuration" : 0,
    "alias" : false
  } ],
  "apiName" : "SwaggerPetstore",
  "apiVersion" : "1.0",
  "apiDescription" : "This is a sample server Petstore server on #{stage_name}#.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n",
  "maturityState" : "Experimental",
  "apiGroups" : [ "Internal" ],
  "isActive" : false,
  "type" : "REST",
  "owner" : "Administrator",
  "policies" : [ "479e023e-526e-4bd7-a423-fbf092368e13" ],
  "referencedFiles" : {
    "petstore_swagger_updated.json" : "{\n\t\"swagger\": \"2.0\",\n\t\"info\": {\n\t\t\"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\n\t\t\"version\": \"1.0.7\",\n\t\t\"title\": \"Swagger Petstore Updated\",\n\t\t\"termsOfService\": \"http://swagger.io/terms/\",\n\t\t\"contact\": {\n\t\t\t\"email\": \"apiteam@swagger.io\"\n\t\t},\n\t\t\"license\": {\n\t\t\t\"name\": \"Apache 2.0\",\n\t\t\t\"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n\t\t}\n\t},\n\t\"host\": \"petstore.swagger.io\",\n\t\"basePath\": \"/v2\",\n\t\"tags\": [\n\t\t{\n\t\t\t\"name\": \"pet\",\n\t\t\t\"description\": \"Everything about your Pets\",\n\t\t\t\"externalDocs\": {\n\t\t\t\t\"description\": \"Find out more\",\n\t\t\t\t\"url\": \"http://swagger.io\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"name\": \"store\",\n\t\t\t\"description\": \"Access to Petstore orders\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"user\",\n\t\t\t\"description\": \"Operations about user\",\n\t\t\t\"externalDocs\": {\n\t\t\t\t\"description\": \"Find out more about our store\",\n\t\t\t\t\"url\": \"http://swagger.io\"\n\t\t\t}\n\t\t}\n\t],\n\t\"schemes\": [\n\t\t\"https\",\n\t\t\"http\"\n\t],\n\t\"paths\": {\n\t\t\"/pet/{petId}/uploadImage\": {\n\t\t\t\"post\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"pet\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"uploads an image\",\n\t\t\t\t\"description\": \"\",\n\t\t\t\t\"operationId\": \"uploadFile\",\n\t\t\t\t\"consumes\": [\n\t\t\t\t\t\"multipart/form-data\"\n\t\t\t\t],\n\t\t\t\t\"produces\": [\n\t\t\t\t\t\"application/json\"\n\t\t\t\t],\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"petId\",\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"description\": \"ID of pet to update\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"additionalMetadata\",\n\t\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\t\"description\": \"Additional data to pass to server\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"file\",\n\t\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\t\"description\": \"file to upload\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"type\": \"file\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"successful operation\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/ApiResponse\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"petstore_auth\": [\n\t\t\t\t\t\t\t\"write:pets\",\n\t\t\t\t\t\t\t\"read:pets\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\"/pet\": {\n\t\t\t\"post\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"pet\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Add a new pet to the store\",\n\t\t\t\t\"description\": \"\",\n\t\t\t\t\"operationId\": \"addPet\",\n\t\t\t\t\"consumes\": [\n\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\"application/xml\"\n\t\t\t\t],\n\t\t\t\t\"produces\": [\n\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\"application/xml\"\n\t\t\t\t],\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"body\",\n\t\t\t\t\t\t\"name\": \"body\",\n\t\t\t\t\t\t\"description\": \"Pet object that needs to be added to the store\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Pet\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"405\": {\n\t\t\t\t\t\t\"description\": \"Invalid input\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"petstore_auth\": [\n\t\t\t\t\t\t\t\"write:pets\",\n\t\t\t\t\t\t\t\"read:pets\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"put\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"pet\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Update an existing pet\",\n\t\t\t\t\"description\": \"\",\n\t\t\t\t\"operationId\": \"updatePet\",\n\t\t\t\t\"consumes\": [\n\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\"application/xml\"\n\t\t\t\t],\n\t\t\t\t\"produces\": [\n\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\"application/xml\"\n\t\t\t\t],\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"in\": \"body\",\n\t\t\t\t\t\t\"name\": \"body\",\n\t\t\t\t\t\t\"description\": \"Pet object that needs to be added to the store\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Pet\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"400\": {\n\t\t\t\t\t\t\"description\": \"Invalid ID supplied\"\n\t\t\t\t\t},\n\t\t\t\t\t\"404\": {\n\t\t\t\t\t\t\"description\": \"Pet not found\"\n\t\t\t\t\t},\n\t\t\t\t\t\"405\": {\n\t\t\t\t\t\t\"description\": \"Validation exception\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"petstore_auth\": [\n\t\t\t\t\t\t\t\"write:pets\",\n\t\t\t\t\t\t\t\"read:pets\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\"/pet/findByStatus\": {\n\t\t\t\"get\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"pet\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Finds Pets by status\",\n\t\t\t\t\"description\": \"Multiple status values can be provided with comma separated strings\",\n\t\t\t\t\"operationId\": \"findPetsByStatus\",\n\t\t\t\t\"produces\": [\n\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\"application/xml\"\n\t\t\t\t],\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"status\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Status values that need to be considered for filter\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\t\t\"available\",\n\t\t\t\t\t\t\t\t\"pending\",\n\t\t\t\t\t\t\t\t\"sold\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"default\": \"available\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"collectionFormat\": \"multi\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"successful operation\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Pet\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"400\": {\n\t\t\t\t\t\t\"description\": \"Invalid status value\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"petstore_auth\": [\n\t\t\t\t\t\t\t\"write:pets\",\n\t\t\t\t\t\t\t\"read:pets\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t\"/pet/findByTags\": {\n\t\t\t\"get\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"pet\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Finds Pets by tags\",\n\t\t\t\t\"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\n\t\t\t\t\"operationId\": \"findPetsByTags\",\n\t\t\t\t\"produces\": [\n\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\"application/xml\"\n\t\t\t\t],\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"tags\",\n\t\t\t\t\t\t\"in\": \"query\",\n\t\t\t\t\t\t\"description\": \"Tags to filter by\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"collectionFormat\": \"multi\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"successful operation\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Pet\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"400\": {\n\t\t\t\t\t\t\"description\": \"Invalid tag value\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"petstore_auth\": [\n\t\t\t\t\t\t\t\"write:pets\",\n\t\t\t\t\t\t\t\"read:pets\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"deprecated\": true\n\t\t\t}\n\t\t},\n\t\t\"/pet/{petId}\": {\n\t\t\t\"get\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"pet\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Find pet by ID\",\n\t\t\t\t\"description\": \"Returns a single pet\",\n\t\t\t\t\"operationId\": \"getPetById\",\n\t\t\t\t\"produces\": [\n\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\"application/xml\"\n\t\t\t\t],\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"petId\",\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"description\": \"ID of pet to return\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"200\": {\n\t\t\t\t\t\t\"description\": \"successful operation\",\n\t\t\t\t\t\t\"schema\": {\n\t\t\t\t\t\t\t\"$ref\": \"#/definitions/Pet\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"400\": {\n\t\t\t\t\t\t\"description\": \"Invalid ID supplied\"\n\t\t\t\t\t},\n\t\t\t\t\t\"404\": {\n\t\t\t\t\t\t\"description\": \"Pet not found\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"api_key\": []\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"post\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"pet\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Updates a pet in the store with form data\",\n\t\t\t\t\"description\": \"\",\n\t\t\t\t\"operationId\": \"updatePetWithForm\",\n\t\t\t\t\"consumes\": [\n\t\t\t\t\t\"application/x-www-form-urlencoded\"\n\t\t\t\t],\n\t\t\t\t\"produces\": [\n\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\"application/xml\"\n\t\t\t\t],\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"petId\",\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"description\": \"ID of pet that needs to be updated\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\t\"description\": \"Updated name of the pet\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"status\",\n\t\t\t\t\t\t\"in\": \"formData\",\n\t\t\t\t\t\t\"description\": \"Updated status of the pet\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"405\": {\n\t\t\t\t\t\t\"description\": \"Invalid input\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"petstore_auth\": [\n\t\t\t\t\t\t\t\"write:pets\",\n\t\t\t\t\t\t\t\"read:pets\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"delete\": {\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"pet\"\n\t\t\t\t],\n\t\t\t\t\"summary\": \"Deletes a pet\",\n\t\t\t\t\"description\": \"\",\n\t\t\t\t\"operationId\": \"deletePet\",\n\t\t\t\t\"produces\": [\n\t\t\t\t\t\"application/json\",\n\t\t\t\t\t\"application/xml\"\n\t\t\t\t],\n\t\t\t\t\"parameters\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"api_key\",\n\t\t\t\t\t\t\"in\": \"header\",\n\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"name\": \"petId\",\n\t\t\t\t\t\t\"in\": \"path\",\n\t\t\t\t\t\t\"description\": \"Pet id to delete\",\n\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"responses\": {\n\t\t\t\t\t\"400\": {\n\t\t\t\t\t\t\"description\": \"Invalid ID supplied\"\n\t\t\t\t\t},\n\t\t\t\t\t\"404\": {\n\t\t\t\t\t\t\"description\": \"Pet not found\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"security\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"petstore_auth\": [\n\t\t\t\t\t\t\t\"write:pets\",\n\t\t\t\t\t\t\t\"read:pets\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t},\n\t\"securityDefinitions\": {\n\t\t\"api_key\": {\n\t\t\t\"type\": \"apiKey\",\n\t\t\t\"name\": \"api_key\",\n\t\t\t\"in\": \"header\"\n\t\t},\n\t\t\"petstore_auth\": {\n\t\t\t\"type\": \"oauth2\",\n\t\t\t\"authorizationUrl\": \"https://petstore.swagger.io/oauth/authorize\",\n\t\t\t\"flow\": \"implicit\",\n\t\t\t\"scopes\": {\n\t\t\t\t\"read:pets\": \"read your pets\",\n\t\t\t\t\"write:pets\": \"modify pets in your account\"\n\t\t\t}\n\t\t}\n\t},\n\t\"definitions\": {\n\t\t\"ApiResponse\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"code\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"format\": \"int32\"\n\t\t\t\t},\n\t\t\t\t\"type\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"message\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"Category\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t},\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"xml\": {\n\t\t\t\t\"name\": \"Category\"\n\t\t\t}\n\t\t},\n\t\t\"Pet\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"required\": [\n\t\t\t\t\"name\",\n\t\t\t\t\"photoUrls\"\n\t\t\t],\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t},\n\t\t\t\t\"category\": {\n\t\t\t\t\t\"$ref\": \"#/definitions/Category\"\n\t\t\t\t},\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"example\": \"doggie\"\n\t\t\t\t},\n\t\t\t\t\"photoUrls\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"xml\": {\n\t\t\t\t\t\t\"wrapped\": true\n\t\t\t\t\t},\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"xml\": {\n\t\t\t\t\t\t\t\"name\": \"photoUrl\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"tags\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"xml\": {\n\t\t\t\t\t\t\"wrapped\": true\n\t\t\t\t\t},\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"xml\": {\n\t\t\t\t\t\t\t\"name\": \"tag\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"$ref\": \"#/definitions/Tag\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"status\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"pet status in the store\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"available\",\n\t\t\t\t\t\t\"pending\",\n\t\t\t\t\t\t\"sold\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"xml\": {\n\t\t\t\t\"name\": \"Pet\"\n\t\t\t}\n\t\t},\n\t\t\"Tag\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t},\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"xml\": {\n\t\t\t\t\"name\": \"Tag\"\n\t\t\t}\n\t\t},\n\t\t\"Order\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t},\n\t\t\t\t\"petId\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t},\n\t\t\t\t\"quantity\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"format\": \"int32\"\n\t\t\t\t},\n\t\t\t\t\"shipDate\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"format\": \"date-time\"\n\t\t\t\t},\n\t\t\t\t\"status\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"Order Status\",\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"placed\",\n\t\t\t\t\t\t\"approved\",\n\t\t\t\t\t\t\"delivered\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"complete\": {\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"xml\": {\n\t\t\t\t\"name\": \"Order\"\n\t\t\t}\n\t\t},\n\t\t\"User\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"id\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"format\": \"int64\"\n\t\t\t\t},\n\t\t\t\t\"username\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"firstName\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"lastName\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"email\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"password\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"phone\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"userStatus\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"format\": \"int32\",\n\t\t\t\t\t\"description\": \"User Status\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"xml\": {\n\t\t\t\t\"name\": \"User\"\n\t\t\t}\n\t\t}\n\t},\n\t\"externalDocs\": {\n\t\t\"description\": \"Find out more about Swagger\",\n\t\t\"url\": \"http://swagger.io\"\n\t}\n}\n"
  },
  "tracingEnabled" : false,
  "scopes" : [ ],
  "publishedPortals" : [ ],
  "creationDate" : "2021-03-17 07:22:07 GMT",
  "lastModified" : "2024-04-03 11:47:21 GMT",
  "systemVersion" : 1,
  "gatewayEndpoints" : { },
  "id" : "f3d2a3c1-0f83-43ab-a6ec-215b93e2ecf5",
  "_docType" : "apis"
}