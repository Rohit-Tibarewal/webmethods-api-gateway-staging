parameters:
- name: template
  type: string
- name: parameters
  type: object
- name: stages
  type: object
  default:
  - name: DESIGN
    pool_name: vmsspoolagents-04
    pool_image: ubuntu-latest
    is_design_stage: true
    instances:
    - name: DESIGN
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
  - name: BUILD
    pool_name: vmsspoolagents-04
    pool_image: ubuntu-latest
    dedicated_pool_name: vmsspoolagents-build
    dedicated_pool_image: ubuntu-latest
    is_build_stage: true
    instances:
    - name: BUILD_01
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
    - name: BUILD_02
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
    - name: BUILD_03
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
    - name: BUILD_04
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
    - name: BUILD_05
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
    - name: BUILD_06
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
    - name: BUILD_07
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
  - name: DEV_INT
    pool_name: vmsspoolagents-04
    pool_image: ubuntu-latest
    instances:
    - name: DEV_INT
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
  - name: DEV_EXT
    pool_name: vmsspoolagents-04
    pool_image: ubuntu-latest
    instances:
    - name: DEV_EXT
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
  - name: TEST_INT
    pool_name: vmsspoolagents-04
    pool_image: ubuntu-latest
    instances:
    - name: TEST_INT
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
  - name: TEST_EXT
    pool_name: vmsspoolagents-04
    pool_image: ubuntu-latest
    instances:
    - name: TEST_EXT
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
  - name: PROD_INT
    pool_name: vmsspoolagents-04
    pool_image: ubuntu-latest
    configure_haft: true
    instances:
    - name: PROD_INT_01
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
    - name: PROD_INT_02
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
  - name: PROD_EXT
    pool_name: vmsspoolagents-04
    pool_image: ubuntu-latest
    configure_haft: true
    instances:
    - name: PROD_EXT_01
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
    - name: PROD_EXT_02
      pool_name: vmsspoolagents-04
      pool_image: ubuntu-latest
- name: build_instances_mapping
  type: object
  default:
    DESIGN: BUILD_01
    DEV_INT: BUILD_02
    DEV_EXT: BUILD_03
    TEST_INT: BUILD_04
    TEST_EXT: BUILD_05
    PROD_INT: BUILD_06
    PROD_EXT: BUILD_07
- name: api_project
- name: environment_set
- name: selected_target
- name: selected_stage
- name: build_instance
  type: string
  default: Default Mapping
- name: eligible_targets
  displayName: Which sets of API projects can be deployed on which API Gateway stages?
  type: object
  default:
  - api_projects:
    - number_conversion
    - ping
    - odata_tutorial
    - countries
    targets:
    - DEV_INT
    - DEV_EXT
    - TEST_INT
    - TEST_EXT
    - PROD_INT
    - PROD_EXT
  - api_projects:
    - petstore
    - petstore_basicauth
    - petstore_versioning
    targets:
    - DEV_INT
    - TEST_INT
    - PROD_INT
  - api_projects:
    - postman_echo
    - postman_echo_jwt
    - postman_echo_oauth2
    - postman_mocking
    - multiple_tenants
    - security_alias
    targets:
    - DEV_EXT
    - TEST_EXT
    - PROD_EXT
  - api_projects:
    - number_conversion
    - odata_tutorial
    - ping
    - countries
    - petstore
    - petstore_basicauth
    - petstore_versioning
    - postman_echo
    - postman_echo_jwt
    - postman_echo_oauth2
    - postman_mocking
    - multiple_tenants
    - security_alias
    targets:
    - DESIGN
- name: ignore_eligible_targets
  type: string

stages:
- template: ${{parameters.template}}
  parameters:
    ${{ each stage in parameters.stages }}:
      ${{ if stage.is_design_stage }}:
        design_stage: ${{stage}}
      ${{ if stage.is_build_stage }}:
        build_stage: ${{stage}}
        # ${{ if containsValue(stage.instances, parameters.build_instance) }}:
        #   build_instances_mapping:
        #     DESIGN: ${{parameters.build_instance}}
        #     DEV_INT: ${{parameters.build_instance}}
        #     DEV_EXT: ${{parameters.build_instance}}
        #     TEST_INT: ${{parameters.build_instance}}
        #     TEST_EXT: ${{parameters.build_instance}}
        #     PROD_INT: ${{parameters.build_instance}}
        #     PROD_EXT: ${{parameters.build_instance}}
        # ${{ else }}:
        #   build_instances_mapping: ${{parameters.build_instances_mapping}}
    target_stages:
    - ${{ each stage in parameters.stages }}:
      - ${{ if not(stage.is_build_stage) }}:
        - ${{stage}}
    all_stages: # ${{parameters.stages}}
    - ${{ each stage in parameters.stages }}:
      - ${{ if eq(parameters.selected_stage, stage.name) }}:
        - ${{stage}}
      - ${{ elseif eq(parameters.selected_stage, 'All') }}:
        - ${{stage}}
      
    ${{ if eq(parameters.build_instance, 'Default Mapping')}}:
      build_instances_mapping: ${{parameters.build_instances_mapping}}
    ${{ else }}:
      build_instances_mapping:
        DESIGN: ${{parameters.build_instance}}
        DEV_INT: ${{parameters.build_instance}}
        DEV_EXT: ${{parameters.build_instance}}
        TEST_INT: ${{parameters.build_instance}}
        TEST_EXT: ${{parameters.build_instance}}
        PROD_INT: ${{parameters.build_instance}}
        PROD_EXT: ${{parameters.build_instance}}
    environment_set: ${{parameters.environment_set}}
    deployment_sets:
    - ${{ if eq(parameters.ignore_eligible_targets, 'true') }}:
      - api_projects:
        - ${{parameters.api_project}}
        targets:
        - ${{ each stage in parameters.stages }}:
          - ${{ if not(stage.is_build_stage) }}:
            - ${{ if eq(parameters.selected_target, stage.name) }}:
              - ${{stage.name}}
            - ${{ elseif eq(parameters.selected_target, 'All (including DESIGN)') }}:
              - ${{stage.name}}
            - ${{ elseif and(eq(parameters.selected_target, 'All (execpt DESIGN)'), ne(stage.name, 'DESIGN')) }}:
              - ${{stage.name}}
    - ${{ else }}:
      - ${{ each eligible_target in parameters.eligible_targets }}:
        - api_projects:
          - ${{ each api_project in eligible_target.api_projects }}:
            - ${{ if eq(parameters.api_project, api_project) }}:
              - ${{api_project}}
            - ${{ elseif eq(parameters.api_project, 'All') }}:
              - ${{api_project}}
          targets:
          - ${{ each target in eligible_target.targets }}:
            - ${{ if eq(parameters.selected_target, target) }}:
              - ${{target}}
            - ${{ elseif eq(parameters.selected_target, 'All (including DESIGN)') }}:
              - ${{target}}
            - ${{ elseif and(eq(parameters.selected_target, 'All (execpt DESIGN)'), ne(target, 'DESIGN')) }}:
              - ${{target}}
    ${{ each parameter in parameters.parameters}}:
      ${{parameter.key}}: ${{parameter.value}}