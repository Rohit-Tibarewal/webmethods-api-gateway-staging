parameters:
- name: tenant
  displayName: Deploy API project on API Gateway stages in which tenant?
  type: string
  default: playground
  values:
  - playground
  - realworld
- name: apiProject
  displayName: Deploy which API project?
  type: string
- name: build_type
  displayName: Build on which stage?
  type: object
  default: 
  - stage: BUILD
    pool: vmssagentpool
    image: ubuntu-latest
- name: target_types
  displayName: Deploy to which stages?
  type: object
  default:
  - stage: DEV_INT
    pool: vmssagentpool
    image: ubuntu-latest
  - stage: DEV_EXT
    pool: vmssagentpool
    image: ubuntu-latest
  - stage: STAGE_INT
    pool: vmssagentpool
    image: ubuntu-latest
  - stage: STAGE_EXT
    pool: vmssagentpool
    image: ubuntu-latest
  - stage: PROD_INT
    pool: vmssagentpool
    image: ubuntu-latest
  - stage: PROD_EXT
    pool: vmssagentpool
    image: ubuntu-latest

stages:
- ${{ each targetType in parameters.target_types }}:
  - stage: ${{ targetType.stage }}
    jobs:
    - deployment: Build_for_${{ targetType.stage }}
      environment: '${{ build_Type[0].stage }}'
      variables:
      - template: /${{parameters.tenant}}/variables/'${{ build_Type[0].stage }}'/variables-template.yml
      pool:
        name: '${{ build_Type[0].pool }}'
        vmImage: '${{ build_Type[0].image }}'
      strategy:
        runOnce:    #rolling, canary are the other strategies that are supported
          deploy:
            steps:
            - checkout: self
              submodules: "true"
              persistCredentials: "true"
            - template: /pipelines/api-build-template.yml  # Template reference
              parameters:
                apiProject: ${{parameters.apiProject}}
                build_environment: $(environment)
                target_type: ${{ targetType.stage }}
                prep_condition: ${{true}}
                test_condition: ${{ ne('${{ targetType.stage }}', 'CONFIG') }}
                tenant: ${{parameters.tenant}}
            - template: /pipelines/store-build-template.yml  # Template reference
              parameters:
                target_type: ${{ targetType.stage }}
            # - template: /pipelines/store-build-artifactory-template.yml  # Template reference
            #   parameters:
            #     target_type: $(targetType)

    - deployment: Deploy_to_API_Gateway_${{ targetType.stage }}
      environment: ${{ targetType.stage }}
      variables:
      - template: /${{parameters.tenant}}/variables/${{variables.targetType.stage}}/variables-template.yml
      pool:
        name: '${{ targetType.pool }}'
        vmImage: '${{ targetType.image }}'
      strategy:
        runOnce:    #rolling, canary are the other strategies that are supported
          deploy:
            steps:
            - checkout: self
              submodules: "true"
              persistCredentials: "true"
            - template: /pipelines/retrieve-build-template.yml  # Template reference
              parameters:
                  target_type: ${{ targetType.stage }}
            - template: /pipelines/api-deploy-template.yml  # Template reference
              parameters:
                apiProject: ${{parameters.apiProject}}
                target_environment: $(environment)
                target_type: ${{ targetType.stage }}
                prep_condition: ${{true}}
                test_condition: ${{ ne('${{ targetType.stage }}', 'CONFIG') }}
                tenant: ${{parameters.tenant}}
      dependsOn: Build_for_${{ targetType.stage }}
      condition: succeeded()