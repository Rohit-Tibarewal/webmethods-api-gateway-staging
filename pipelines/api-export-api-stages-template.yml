parameters:
- name: design_stage
  type: object
- name: build_stage
  type: object
- name: target_stages
  type: object
- name: all_stages
  type: object
- name: build_instances_mapping
  type: object
- name: api_project
  type: string
- name: commitMessage
  type: string
- name: deployment_sets
  type: object
- name: environment_set
  type: string

stages:
- stage: Export_${{parameters.api_project}}_from_${{parameters.design_stage.name}}
  jobs:
  - deployment: 'Export_${{parameters.api_project}}_from_API_Gateway_${{parameters.design_stage.name}}'
    environment: '${{parameters.design_stage.name}}'
    variables:
    - group: ${{parameters.design_stage.name}}_users
    pool:
      name: '$(pool_name)'
      vmImage: '$(pool_image)'
    strategy:
      runOnce:    #rolling, canary are the other strategies that are supported
        deploy:
          steps:
          - checkout: self
            submodules: "true"
            persistCredentials: "true"
            clean: "true"
            fetchDepth: 0
          - download: none
          - template: /pipelines/api-export-api-steps-template.yml
            parameters:
              environment_set: ${{parameters.environment_set}}
              api_project: ${{parameters.api_project}}
              source_environment: ${{parameters.design_stage.name}}_environment.json
              source_type: ${{parameters.design_stage.name}}
          - template: /pipelines/commit-template.yml
            parameters:
              commitMessage: ${{parameters.commitMessage}}
          - bash: |
              echo "##vso[build.addbuildtag]${{parameters.api_project}}"
              echo "##vso[build.addbuildtag]${{parameters.design_stage.name}}"
              echo "##vso[build.addbuildtag]${{parameters.api_project}}_${{parameters.design_stage.name}}"
              echo "##vso[build.addbuildtag]${{parameters.environment_set}}"
            displayName: Add build tags