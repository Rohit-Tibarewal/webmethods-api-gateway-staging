parameters:
  api_project: ''
  target_environment: ''
  target_type: ''

steps:
- bash: |
   echo "##vso[task.setvariable variable=target_environment_hostname]`jq -r '.values[] | select(.key == "hostname") | .value' environments/$(project_name)/${{parameters.target_environment}}`"
   echo "##vso[task.setvariable variable=target_environment_ip]`jq -r '.values[] | select(.key == "ip") | .value' environments/$(project_name)/${{parameters.target_environment}}`"
   echo "##vso[task.setvariable variable=target_environment_port]`jq -r '.values[] | select(.key == "port") | .value' environments/$(project_name)/${{parameters.target_environment}}`"
   echo "##vso[task.setvariable variable=target_environment_insecureflag]`jq -r '.values[] | select(.key == "insecureflag") | .value' environments/$(project_name)/${{parameters.target_environment}}`"
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Read and parse API Gateway ${{parameters.target_type}} configuration, extract ip, hostname, port and insecureflag'

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(System.DefaultWorkingDirectory)/$(Build.BuildId)_${{parameters.target_type}}_${{parameters.api_project}}_export.zip'
    artifactName: '${{parameters.target_type}}_${{parameters.api_project}}_deploy_import'

- bash: |
    echo "##vso[task.setvariable variable=scopes]`jq -c '.' $(System.DefaultWorkingDirectory)/apis/${{parameters.api_project}}/scopes.json`"
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Prepare list of scopes to be imported'

- script: |
    newman run postman/collections/utilities/import/Import_API.json --reporters cli \
    --env-var importer_user='$(importer_user)' \
    --env-var importer_password='$(importer_password)' \
    --env-var initializer_user='$(initializer_user)' \
    --env-var initializer_password='$(initializer_password)' \
    --env-var scopes='$(scopes)' \
    --env-var file_Loc=$(System.DefaultWorkingDirectory)/$(Build.BuildId)_${{parameters.target_type}}_${{parameters.api_project}}_export.zip \
    -e environments/$(project_name)/${{parameters.target_environment}} \
    $(target_environment_insecureflag)
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Import the Deployable To API Gateway ${{parameters.target_type}}'
  env:
    no_proxy: $(target_environment_ip)

- script: |
    newman run postman/collections/utilities/publish/Republish_from_${{parameters.target_type}}.json --reporters cli \
    --env-var publisher_user='$(publisher_user)' \
    --env-var publisher_password='$(publisher_password)' \
    -e environments/$(project_name)/${{parameters.target_environment}} \
    $(target_environment_insecureflag)
  workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: 'Republish all APIs from API Gateway ${{parameters.target_type}}'
  env:
    no_proxy: $(target_environment_ip)