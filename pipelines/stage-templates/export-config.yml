parameters:
- name: design_stage
  type: object
- name: build_stage
  type: object
- name: target_stages
  type: object
- name: all_stages
  type: object
- name: build_instances_mapping
  type: object
- name: environment_set
  type: string
- name: deployment_sets
  type: object
- name: source_instance
  type: string
- name: commitMessage
  type: string

stages:
- ${{ each stage in parameters.all_stages }}:
  - ${{ each instance in stage.instances }}:
    - ${{ if eq(instance.name, parameters.source_instance) }}:
      - stage: Export_from_${{stage.name}}
        dependsOn: []
        jobs:
        - deployment: Export_config_from_API_Gateway_${{instance.name}}
          environment: API_Gateway_${{instance.name}}
          variables:
          - group: ${{stage.name}}_users
          - group: ${{instance.name}}_users
          pool:
            name: ${{instance.pool_name}}
            vmImage: ${{instance.pool_image}}
          strategy:
            runOnce:    #rolling, canary are the other strategies that are supported
              deploy:
                steps:
                - checkout: self
                  submodules: "true"
                  persistCredentials: "true"
                  fetchDepth: 0
                - template: /pipelines/step-templates/export-config.yml
                  parameters:
                    environment_set: ${{parameters.environment_set}}
                    environment: API_Gateway_${{instance.name}}_environment.json
                    stage_name: ${{stage.name}}
                    instance_name: ${{instance.name}}
                - template: /pipelines/step-templates/commit.yml
                  parameters:
                    commitMessage: ${{parameters.commitMessage}}
                - bash: |
                    echo "##vso[build.addbuildtag]${{parameters.environment_set}}"
                    echo "##vso[build.addbuildtag]${{stage.name}}"
                    echo "##vso[build.addbuildtag]${{instance.name}}"
                  displayName: Add build tags