parameters:
- name: design_stage
  type: object
- name: build_stage
  type: object
- name: target_stages
  type: object
- name: all_stages
  type: object
- name: build_environments_mapping
  type: object
- name: build_job_assignment_mechanism
  type: string
- name: environment_set
  type: string
- name: deployment_sets
  type: object

- name: selected_api_project
  type: string
- name: commit_message
  type: string

stages:
- stage: Export_${{parameters.selected_api_project}}_from_${{parameters.design_stage.name}}
  jobs:
  - ${{ each environment in parameters.design_stage.environments }}: # Iterate over all DESIGN environments -> probably not what you want if you have multiple DESIGN environments?
    - deployment: Export_${{parameters.selected_api_project}}_from_API_Gateway_${{environment.name}}
      environment: API_Gateway_${{parameters.environment_set}}_${{environment.name}}
      variables:
      - group: API_Gateway_${{parameters.environment_set}}_users
      - group: API_Gateway_${{parameters.environment_set}}_${{parameters.design_stage.name}}_users
      - group: API_Gateway_${{parameters.environment_set}}_${{environment.name}}_users
      pool:
        name: ${{environment.pool_name}}
        vmImage: ${{environment.pool_image}}
      strategy:
        runOnce:    #rolling, canary are the other strategies that are supported
          deploy:
            steps:
            - checkout: self
              submodules: "true"
              persistCredentials: "true"
              clean: "true"
              fetchDepth: 0
            - download: none
            - template: /pipelines/step-templates/export-api.yml
              parameters:
                environment_set: ${{parameters.environment_set}}
                api_project: ${{parameters.selected_api_project}}
                environment_file: API_Gateway_${{environment.name}}_environment.json
                stage_name: ${{parameters.design_stage.name}}
                environment_name: ${{environment.name}}
            - template: /pipelines/step-templates/commit.yml
              parameters:
                commit_message: ${{parameters.commit_message}}
            - bash: |
                echo "##vso[build.addbuildtag]${{parameters.environment_set}}"
                echo "##vso[build.addbuildtag]${{parameters.selected_api_project}}"
                echo "##vso[build.addbuildtag]${{parameters.design_stage.name}}"
                echo "##vso[build.addbuildtag]${{environment.name}}"
                echo "##vso[build.addbuildtag]${{parameters.selected_api_project}}_${{parameters.design_stage.name}}"
                echo "##vso[build.addbuildtag]${{parameters.selected_api_project}}_${{environment.name}}"
              displayName: Add build tags