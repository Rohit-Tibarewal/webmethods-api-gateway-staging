parameters:
- name: tenant
  displayName: Deploy API project on API Gateway stages in which tenant?
  type: string
  default: playground
  values:
  - playground
  - realworld
- name: apiProjects
  displayName: Deploy which API projects?
  type: object
- name: build_stage
  displayName: Build on which stage?
  type: object
  default:
    name: BUILD
    pool: buildagents
    image: ubuntu-latest
- name: target_stages
  displayName: Deploy to which stages?
  type: object
  default:
  - name: DEV_INT
    jobs:
    - name: DEV_INT
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: DEV_EXT
    jobs:
    - name: DEV_EXT
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: STAGE_INT
    jobs:
    - name: STAGE_INT
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: STAGE_EXT
    jobs:
    - name: STAGE_EXT
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: PROD_INT
    jobs:
    - name: PROD_INT_01
      pool: vmsspoolagents
      image: ubuntu-latest
    - name: PROD_INT_02
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: PROD_EXT
    jobs:
    - name: PROD_EXT_01
      pool: vmsspoolagents
      image: ubuntu-latest
    - name: PROD_EXT_02
      pool: vmsspoolagents
      image: ubuntu-latest

stages:
# - ${{ each apiProject in parameters.apiProjects }}:
  - ${{ each target_stage in parameters.target_stages }}:
    - stage: ${{ target_stage.name }}_${{ parameters.apiProjects[0] }}
      dependsOn: []
      jobs:
      - deployment: 'Build_${{parameters.apiProjects[0]}}_for_${{ target_stage.name }}'
        environment: '${{ parameters.build_stage.name }}'
        variables:
        - group: ${{parameters.tenant}}_${{ parameters.build_stage.name }}_users
        pool:
          name: '${{ parameters.build_stage.pool }}'
          vmImage: '${{ parameters.build_stage.image }}'
        strategy:
          runOnce:    #rolling, canary are the other strategies that are supported
            deploy:
              steps:
              - checkout: self
                submodules: "true"
                persistCredentials: "true"
              - download: none

      - deployment: 'Deploy_${{parameters.apiProjects[0]}}_to_API_Gateway_${{ target_stage.name }}'
        environment: ${{ target_stage.name }}
        variables:
        - group: ${{parameters.tenant}}_${{ target_stage.name }}_users
        pool:
          name: '${{ target_stage.jobs[0].pool }}'
          vmImage: '${{ target_stage.jobs[0].image }}'
        strategy:
          runOnce:    #rolling, canary are the other strategies that are supported
            deploy:
              steps:
              - checkout: self
                submodules: "true"
                persistCredentials: "true"
              - download: none
