parameters:
- name: tenant
  displayName: Deploy API project on API Gateway stages in which tenant?
  type: string
  default: playground
  values:
  - playground
  - realworld
- name: apiProjects
  displayName: Deploy which API projects?
  type: object
- name: build_stage
  displayName: Build on which stage?
  type: object
  default:
    name: BUILD
    pool: buildagents
    image: ubuntu-latest
- name: target_stages
  displayName: Deploy to which stages?
  type: object
  default:
  - name: DEV_INT
    jobs:
    - name: DEV_INT
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: DEV_EXT
    jobs:
    - name: DEV_EXT
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: STAGE_INT
    jobs:
    - name: STAGE_INT
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: STAGE_EXT
    jobs:
    - name: STAGE_EXT
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: PROD_INT
    jobs:
    - name: PROD_INT_01
      pool: vmsspoolagents
      image: ubuntu-latest
    - name: PROD_INT_02
      pool: vmsspoolagents
      image: ubuntu-latest
  - name: PROD_EXT
    jobs:
    - name: PROD_EXT_01
      pool: vmsspoolagents
      image: ubuntu-latest
    - name: PROD_EXT_02
      pool: vmsspoolagents
      image: ubuntu-latest

stages:
- ${{ each apiProject in parameters.apiProjects }}:
  - ${{ each target_stage in parameters.target_stages }}:
    - stage: ${{ target_stage.name }}_${{ apiProject }}
      dependsOn: []
      jobs:
      - deployment: 'Build_${{apiProject}}_for_${{ target_stage.name }}'
        environment: '${{ parameters.build_stage.name }}'
        variables:
        - group: ${{parameters.tenant}}_${{ parameters.build_stage.name }}_users
        pool:
          name: '${{ parameters.build_stage.pool }}'
          vmImage: '${{ parameters.build_stage.image }}'
        strategy:
          runOnce:    #rolling, canary are the other strategies that are supported
            deploy:
              steps:
              - checkout: self
                submodules: "true"
                persistCredentials: "true"
              - download: none
              - template: /pipelines/api-build-steps-template.yml
                parameters:
                  apiProject: ${{apiProject}}
                  build_environment: "$(Agent.Name)_environment.json"
                  target_type: ${{ target_stage.name }}
                  prep_condition: ${{true}}
                  test_condition: ${{ ne('${{ target_stage.name }}', 'CONFIG') }}
                  tenant: ${{parameters.tenant}}
              - template: /pipelines/store-build-template.yml
                parameters:
                  target_type: ${{ target_stage.name }}
                  apiProject: ${{apiProject}}
              - bash: |
                  echo "##vso[build.addbuildtag]${{apiProject}}"
                  echo "##vso[build.addbuildtag]${{parameters.build_stage.name}}"
                  echo "##vso[build.addbuildtag]${{apiProject}}_${{parameters.build_stage.name}}"
                displayName: Add build tags
              # - template: /pipelines/store-build-artifactory-template.yml
              #   parameters:
              #     target_type: $(targetType)

      # - ${{ each job in target_stage.jobs }}:
      #   - deployment: 'Deploy_${{apiProject}}_to_API_Gateway_${{ job.name }}'
      #     environment: ${{ job.name }}
      #     variables:
      #     - group: ${{parameters.tenant}}_${{ job.name }}_users
      #     pool:
      #       name: '${{ job.pool }}'
      #       vmImage: '${{ job.image }}'
      #     strategy:
      #       runOnce:    #rolling, canary are the other strategies that are supported
      #         deploy:
      #           steps:
      #           - checkout: self
      #             submodules: "true"
      #             persistCredentials: "true"
      #           - template: /pipelines/retrieve-build-template.yml
      #             parameters:
      #                 target_type: ${{ target_stage.name }}
      #                 apiProject: ${{apiProject}}
      #           - template: /pipelines/api-deploy-steps-template.yml
      #             parameters:
      #               apiProject: ${{apiProject}}
      #               target_environment: ${{ job.name }}_environment.json
      #               target_type: ${{ target_stage.name }}
      #               prep_condition: ${{true}}
      #               test_condition: ${{ ne('${{ target_stage.name }}', 'CONFIG') }}
      #               tenant: ${{parameters.tenant}}
      #           - bash: |
      #               echo "##vso[build.addbuildtag]${{apiProject}}"
      #               echo "##vso[build.addbuildtag]${{job.name}}"
      #               echo "##vso[build.addbuildtag]${{apiProject}}_${{job.name}}"
      #             displayName: Add build tags
      #     dependsOn: 'Build_${{apiProject}}_for_${{ target_stage.name }}'
      #     condition: succeeded()