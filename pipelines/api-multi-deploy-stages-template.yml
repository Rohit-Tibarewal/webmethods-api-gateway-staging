parameters:
- name: tenant
  displayName: Deploy API project on API Gateway stages in which tenant?
  type: string
- name: apiProjects
  displayName: Deploy which API projects?
  type: object
- name: build_stage
  displayName: Build on which stage?
  type: object
- name: target_stages
  displayName: Deploy to which stages?
  type: object

stages:
# - ${{ each apiProject in parameters.apiProjects }}:
  # - ${{ each target_stage in parameters.target_stages }}:
    - stage: ${{ parameters.target_stages[0].name }}_${{ parameters.apiProjects[0] }}
      dependsOn: []
      jobs:
      - deployment: 'Build_${{parameters.apiProjects[0]}}_for_${{ parameters.target_stages[0].name }}'
        environment: 'DEV_EXT'
        variables:
        - group: ${{parameters.tenant}}_${{ parameters.build_stage.name }}_users
        pool:
          name: '${{ parameters.build_stage.pool }}'
          vmImage: '${{ parameters.build_stage.image }}'
        strategy:
          runOnce:    #rolling, canary are the other strategies that are supported
            deploy:
              steps:
              - checkout: self
                submodules: "true"
                persistCredentials: "true"
              - download: none

      - deployment: 'Deploy_${{parameters.apiProjects[0]}}_to_API_Gateway_${{ parameters.target_stages[0].name }}'
        environment: 'DEV_INT'
        variables:
        - group: ${{parameters.tenant}}_${{ parameters.target_stages[0].name }}_users
        pool:
          name: '${{ parameters.target_stages[0].jobs[0].pool }}'
          vmImage: '${{ parameters.target_stages[0].jobs[0].image }}'
        strategy:
          runOnce:    #rolling, canary are the other strategies that are supported
            deploy:
              steps:
              - checkout: self
                submodules: "true"
                persistCredentials: "true"
              - download: none

  # - ${{ each target_stage in parameters.target_stages }}:
    - stage: ${{ parameters.target_stages[0].name }}_${{ parameters.apiProjects[1] }}
      dependsOn: []
      jobs:
      - deployment: 'Build_${{parameters.apiProjects[1]}}_for_${{ parameters.target_stages[0].name }}'
        environment: 'DEV_EXT'
        variables:
        - group: ${{parameters.tenant}}_${{ parameters.build_stage.name }}_users
        pool:
          name: '${{ parameters.build_stage.pool }}'
          vmImage: '${{ parameters.build_stage.image }}'
        strategy:
          runOnce:    #rolling, canary are the other strategies that are supported
            deploy:
              steps:
              - checkout: self
                submodules: "true"
                persistCredentials: "true"
              - download: none

      - deployment: 'Deploy_${{parameters.apiProjects[1]}}_to_API_Gateway_${{ parameters.target_stages[0].name }}'
        environment: 'DEV_INT'
        variables:
        - group: ${{parameters.tenant}}_${{ parameters.target_stages[0].name }}_users
        pool:
          name: '${{ parameters.target_stages[0].jobs[0].pool }}'
          vmImage: '${{ parameters.target_stages[0].jobs[0].image }}'
        strategy:
          runOnce:    #rolling, canary are the other strategies that are supported
            deploy:
              steps:
              - checkout: self
                submodules: "true"
                persistCredentials: "true"
              - download: none
