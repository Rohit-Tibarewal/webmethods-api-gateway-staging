variables:
- group: 'Project Configuration'
- group: 'BUILD_instances' # If you want to use a variable group for connection details
- name: ClaimedResource
  value: ''

pool:
  name: '$(pool_name)'
  vmImage: '$(pool_image)'

stages:
- stage: ResourceManagement
  jobs:
  - job: ResourceManagementJob
    steps:
    - script: |
        echo "$(PAT)" | az devops login --organization https://dev.azure.com/pswm-inno-api-management
        group_id=$(az pipelines variable-group list --organization https://dev.azure.com/pswm-inno-api-management --project azure-demo --group-name BUILD_instances --query [0].id)

        resource_name="null"

        # Loop until a resource is available
        while [ "$resource_name" == "null" ]; do
          resource_name=$(az pipelines variable-group list --organization https://dev.azure.com/pswm-inno-api-management --project azure-demo --group-name BUILD_instances --query [0].variables | jq -r "[ to_entries[] | select (.value.value==\"Available\") ][0].key")

          if [ "$resource_name" == "null" ]; then
            echo "No available resource found. Waiting..."
            sleep 60
          fi
        done

        az pipelines variable-group variable update --organization https://dev.azure.com/pswm-inno-api-management --project azure-demo --group-id $group_id --name $resource_name --value "Claimed by $(Build.BuildNumber)"

        echo "Selected Resource: $resource_name"
        echo "##vso[task.setvariable variable=ClaimedResource]$resource_name"
      displayName: 'Claim Resource'

    # Add steps to use and release the claimed resource

    - script: |
        echo "Using Claimed Resource: $(ClaimedResource)"
      displayName: 'Use Resource'

    - script: |
        group_id=$(az pipelines variable-group list --organization https://dev.azure.com/pswm-inno-api-management --project azure-demo --group-name BUILD_instances --query [0].id)
        az pipelines variable-group variable update --organization https://dev.azure.com/pswm-inno-api-management --project azure-demo --group-id $group_id --name "$(ClaimedResource)" --value "Available"
        echo "Released Claimed Resource: $(ClaimedResource)"
      displayName: 'Release Resource'
