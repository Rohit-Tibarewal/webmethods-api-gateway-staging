# Pipeline for apig staging

trigger: none

# To do: Add apiProject as pipeline parameter (vs. pipeline variable)
# parameters:
# - name: apiProject
#   type: string
#   default: 'petstore'

variables:
- name: tenant
  ${{ if startsWith(variables['Build.DefinitionName'], 'wm_test_apigw_staging') }}:
    value: playground
  ${{ if startsWith(variables['Build.DefinitionName'], 'wm_apigw_staging') }}:
    value: realworld
# - template: /${{variables.tenant}}/variables/variables-artifactory-template.yml
- template: /${{variables.tenant}}/variables/variables-aliases-template.yml

jobs:
- job: Build_for_STAGE_INT
  variables:
  - template: /${{variables.tenant}}/variables/BUILD/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
  - template: /pipelines/api-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      build_environment: $(environment)
      target_type: STAGE-INT
      prep_condition: ${{true}}
      test_condition: ${{true}}
      tenant: $(tenant)
  - template: /pipelines/store-build-template.yml  # Template reference
    parameters:
      target_type: STAGE-INT
  # - template: /pipelines/store-build-artifactory-template.yml  # Template reference
  #   parameters:
  #     target_type: STAGE-INT

- job: Deploy_to_STAGE_INT
  variables:
  - template: /${{variables.tenant}}/variables/STAGE-INT/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
  - template: /pipelines/retrieve-build-template.yml  # Template reference
    parameters:
      target_type: STAGE-INT
  - template: /pipelines/api-deploy-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_environment: $(environment)
      target_type: STAGE-INT
      prep_condition: ${{true}}
      test_condition: ${{true}}
      tenant: $(tenant)
  dependsOn: Build_for_STAGE_INT
  condition: succeeded()

- job: Build_for_PROD_INT
  variables:
  - template: /${{variables.tenant}}/variables/BUILD/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
  - template: /pipelines/api-build-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      build_environment: $(environment)
      target_type: PROD-INT
      prep_condition: ${{true}}
      test_condition: ${{true}}
      tenant: $(tenant)
  - template: /pipelines/store-build-template.yml  # Template reference
    parameters:
      target_type: PROD-INT
  dependsOn: Deploy_to_STAGE_INT
  condition: succeeded()
  # - template: /pipelines/store-build-artifactory-template.yml  # Template reference
  #   parameters:
  #     target_type: PROD-INT

- job: Deploy_to_PROD_INT
  variables:
  - template: /${{variables.tenant}}/variables/PROD-INT/variables-template.yml
  pool:
    name: '$(agent_pool)'
    vmImage: '$(agent_pool_vmImage)'
  steps:
  - checkout: self
    submodules: "true"
    persistCredentials: "true"
  - template: /pipelines/retrieve-build-template.yml  # Template reference
    parameters:
      target_type: PROD-INT
  - template: /pipelines/api-deploy-template.yml  # Template reference
    parameters:
      apiProject: $(apiProject)
      target_environment: $(environment)
      target_type: PROD-INT
      prep_condition: ${{true}}
      test_condition: ${{true}}
      tenant: $(tenant)
  dependsOn: Build_for_PROD_INT
  condition: succeeded()