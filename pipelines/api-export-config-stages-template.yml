parameters:
- name: tenant
  displayName: Export API Gateway configuration in which tenant?
  type: string
  default: playground
  values:
  - playground
  - realworld
- name: source_instance
  displayName: Export API Gateway configuration from which API Gateway?
  type: string
  values:
  - CONFIG
  - BUILD_01
  - BUILD_02
  - BUILD_03
  - BUILD_04
  - BUILD_05
  - BUILD_06
  - BUILD_07
  - DEV_INT
  - DEV_EXT
  - STAGE_INT
  - STAGE_EXT
  - PROD_INT_01
  - PROD_INT_02
  - PROD_EXT_01
  - PROD_EXT_02
- name: commitMessage
  displayName: Message for the commit in Git?
  type: string
- name: source_types
  displayName: List of stages
  type: object
  default:
  - stage: CONFIG
    pool: vmsspoolagents
    image: ubuntu-latest
  - stage: BUILD
    pool: vmsspoolagents
    image: ubuntu-latest
  - stage: DEV_INT
    pool: vmsspoolagents
    image: ubuntu-latest
  - stage: DEV_EXT
    pool: vmsspoolagents
    image: ubuntu-latest
  - stage: STAGE_INT
    pool: vmsspoolagents
    image: ubuntu-latest
  - stage: STAGE_EXT
    pool: vmsspoolagents
    image: ubuntu-latest
  - stage: PROD_INT
    pool: vmsspoolagents
    image: ubuntu-latest
  - stage: PROD_EXT
    pool: vmsspoolagents
    image: ubuntu-latest

stages:
- ${{ each type in parameters.source_types }}:
  - ${{ if eq(type.stage, parameters.sourceType) }}:
    - stage: ${{ type.stage }}
      # dependsOn: []
      jobs:
      - deployment: Export_config_from_API_Gateway_${{ type.stage }}
        environment: ${{ type.stage }}
        variables:
        - group: ${{parameters.tenant}}_${{ type.stage }}_users
        pool:
          name: '${{ type.pool }}'
          vmImage: '${{ type.image }}'
        strategy:
          runOnce:    #rolling, canary are the other strategies that are supported
            deploy:
              steps:
              - checkout: self
                submodules: "true"
                persistCredentials: "true"
              - template: /pipelines/api-export-config-steps-template.yml
                parameters:
                  environment: ${{ type.stage }}_environment.json
                  type: ${{ type.stage }}
                  tenant: ${{parameters.tenant}}
              - template: /pipelines/commit-template.yml
                parameters:
                  commitMessage: ${{parameters.commitMessage}}
              - bash: echo "##vso[build.addbuildtag]${{type.stage}}"
                displayName: Add build tag