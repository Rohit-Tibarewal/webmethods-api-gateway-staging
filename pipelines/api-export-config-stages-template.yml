parameters:
- name: tenant
  displayName: Export API Gateway configuration in which tenant?
  type: string
  default: playground
  values:
  - playground
  - realworld
- name: source_instance
  displayName: Export API Gateway configuration from which API Gateway?
  type: string
  values:
  - CONFIG
  - BUILD_01
  - BUILD_02
  - BUILD_03
  - BUILD_04
  - BUILD_05
  - BUILD_06
  - BUILD_07
  - DEV_INT
  - DEV_EXT
  - STAGE_INT
  - STAGE_EXT
  - PROD_INT_01
  - PROD_INT_02
  - PROD_EXT_01
  - PROD_EXT_02
- name: commitMessage
  displayName: Message for the commit in Git?
  type: string
- name: stages
  displayName: List of stages
  type: object

stages:
- ${{ each stage in parameters.stages }}:
  - ${{ each instance in stage.instances }}:
    - ${{ if eq(instance.name, parameters.source_instance) }}:
      - stage: ${{ instance.name }}
        # dependsOn: []
        jobs:
        - deployment: Export_config_from_API_Gateway_${{ instance.name }}
          environment: ${{ instance.name }}
          variables:
          - group: ${{parameters.tenant}}_${{ instance.name }}_users
          pool:
            name: '${{ instance.pool }}'
            vmImage: '${{ instance.image }}'
          strategy:
            runOnce:    #rolling, canary are the other strategies that are supported
              deploy:
                steps:
                - checkout: self
                  submodules: "true"
                  persistCredentials: "true"
                - template: /pipelines/api-export-config-steps-template.yml
                  parameters:
                    environment: ${{ instance.name }}_environment.json
                    type: ${{ stage.name }}
                    tenant: ${{parameters.tenant}}
                - template: /pipelines/commit-template.yml
                  parameters:
                    commitMessage: ${{parameters.commitMessage}}
                - bash: echo "##vso[build.addbuildtag]${{instance.name}}"
                  displayName: Add build tag