parameters:
- name: design_stage
  type: object
- name: build_stage
  type: object
- name: target_stages
  type: object
- name: all_stages
  type: object
- name: build_instances_mapping
  type: object
- name: deployment_sets
  type: object
- name: environment_set

stages:
- ${{ each target_stage in parameters.target_stages }}:
  - ${{ each deployment_set in parameters.deployment_sets }}:
    - ${{ each deployment_target in deployment_set.targets }}:
      - ${{ if eq(target_stage.name, deployment_target) }}:
        - ${{ each api_project in deployment_set.api_projects }}:
          - stage: Build_${{api_project}}_and_deploy_it_on_${{deployment_target}}
            dependsOn: []
            lockBehavior: sequential
            jobs:
            # - template: /pipelines/api-build-job-template-fixed-build-environments.yml
            # - template: /pipelines/api-build-job-template-dedicated-build-agents.yml
            - template: /pipelines/api-build-job-template-resource-pooling.yml
              parameters:
                environment_set: ${{parameters.environment_set}}
                build_stage: ${{parameters.build_stage}}
                target_stage: ${{target_stage}}
                api_project: ${{api_project}}
                deployment_target: ${{deployment_target}}
                build_instances_mapping: ${{parameters.build_instances_mapping}}

            - ${{ each deploy_instance in target_stage.instances }}:
              - deployment: 'Deploy_${{api_project}}_to_API_Gateway_${{deploy_instance.name}}'
                dependsOn: 'Build_${{api_project}}_for_${{deployment_target}}'
                environment: API_Gateway_${{deploy_instance.name}}
                variables:
                - group: ${{target_stage.name}}_users
                - group: ${{deploy_instance.name}}_users
                pool:
                  name: ${{deploy_instance.pool_name}}
                  vmImage: ${{deploy_instance.pool_image}}
                strategy:
                  runOnce:    #rolling, canary are the other strategies that are supported
                    deploy:
                      steps:
                      - checkout: self
                        submodules: "true"
                        persistCredentials: "true"
                        fetchDepth: 0
                      - template: /pipelines/api-retrieve-build-template.yml
                        parameters:
                          target_stage_name: ${{deployment_target}}
                          api_project: ${{api_project}}
                      - template: /pipelines/api-deploy-steps-template.yml
                        parameters:
                          environment_set: ${{parameters.environment_set}}
                          api_project: ${{api_project}}
                          target_environment: API_Gateway_${{deploy_instance.name}}_environment.json
                          target_stage_name: ${{deployment_target}}

                      - bash: |
                          echo "##vso[build.addbuildtag]${{parameters.environment_set}}"
                          echo "##vso[build.addbuildtag]${{deployment_target}}"
                          echo "##vso[build.addbuildtag]${{deploy_instance.name}}"
                          echo "##vso[build.addbuildtag]${{api_project}}"
                          echo "##vso[build.addbuildtag]${{api_project}}_${{deployment_target}}"
                          echo "##vso[build.addbuildtag]${{api_project}}_${{deploy_instance.name}}"
                        displayName: Add build tags