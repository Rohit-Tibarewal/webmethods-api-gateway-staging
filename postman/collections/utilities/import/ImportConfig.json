{
	"info": {
		"_postman_id": "6c695ab5-7f93-4608-b712-1ba604a0ad15",
		"name": "API Gateway Configuration",
		"description": "This Collection deploys the API to API Gateway",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "3558839-6c695ab5-7f93-4608-b712-1ba604a0ad15"
	},
	"item": [
		{
			"name": "Get local OAuth2 Authorization Server alias",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains alias\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.alias).to.exist;\r",
							"});\r",
							"\r",
							"let scopesString = pm.variables.get(\"scopes\");\r",
							"\r",
							"// console.log(\"scopes Postman variable: \" + scopesString);\r",
							"\r",
							"if (scopesString === undefined || scopesString === null || scopesString === \"\") {\r",
							"    postman.setNextRequest(\"ImportAPI\");\r",
							"} else {\r",
							"    let scopes = JSON.parse(pm.variables.get(\"scopes\"));\r",
							"\r",
							"//    console.log(\"Parsed scopes Postman variable: \" + JSON.stringify(scopes));\r",
							"\r",
							"    if (scopes.length === 0) {\r",
							"        postman.setNextRequest(\"ImportAPI\");\r",
							"    } else {\r",
							"        let alias = JSON.parse(responseBody).alias;\r",
							"\r",
							"        alias.scopes = alias.scopes || [];\r",
							"\r",
							"        console.log(\"Adding scopes to OAuth2 local Authorization Server alias\");\r",
							"        console.log(\"Existing scopes: \" + JSON.stringify(alias.scopes));\r",
							"        console.log(\"Adding scopes: \" + JSON.stringify(scopes));\r",
							"\r",
							"        for (var i=0; i<scopes.length; i++) {\r",
							"            let newscope = scopes[i];\r",
							"            let index = alias.scopes.findIndex(scope => scope.name === newscope.name);\r",
							"            if (index === -1) {\r",
							"                alias.scopes.push(newscope);\r",
							"            } else {\r",
							"                alias.scopes[index] = newscope;\r",
							"            }\r",
							"        }\r",
							"\r",
							"        console.log(\"New scopes: \" + JSON.stringify(alias.scopes));\r",
							"\r",
							"        let aliasString = JSON.stringify(alias);\r",
							"        pm.globals.set(\"alias\", aliasString);\r",
							"        postman.setNextRequest(\"Update local OAuth2 Authorization Server alias\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript",
						"id": "244c97b0-6ee1-4b5a-903e-7c5025883fc2"
					}
				}
			],
			"id": "a1df9b3b-7f8a-4c91-a36a-5dcd13274df8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{initializer_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{initializer_user}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/alias/local",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"alias",
						"local"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update local OAuth2 Authorization Server alias",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains alias\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.alias).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains OAuth2 scopes\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.alias.scopes).to.exist;\r",
							"});\r",
							"\r",
							"console.log(\"OAuth2 scopes set to: \" + JSON.stringify(pm.response.json().alias.scopes));"
						],
						"type": "text/javascript",
						"id": "883a9c08-17e9-43bf-9fd1-4957d69cc00c"
					}
				}
			],
			"id": "75f2baed-1cf9-4ba3-9d43-daa7be88cdcb",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{initializer_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{initializer_user}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{alias}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/alias/local",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"alias",
						"local"
					]
				}
			},
			"response": []
		},
		{
			"name": "ImportConfig",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"id": "49e1339c-4731-445b-8676-d9413de19fad"
					}
				}
			],
			"id": "574e5579-63db-409d-b1f5-93c8f846d890",
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{importer_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{importer_user}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/zip"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"body": {
					"mode": "file",
					"file": {}
				},
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/archive?overwrite=*,aliases",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"archive"
					],
					"query": [
						{
							"key": "overwrite",
							"value": "*,aliases"
						}
					]
				}
			},
			"response": []
		}
	]
}