{
	"info": {
		"_postman_id": "9fa56b53-2fcc-46cd-9d9e-136446d42146",
		"name": "Republish_from_DEV_INT",
		"description": "This Collection deploys the API to API Gateway",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "3558839-9fa56b53-2fcc-46cd-9d9e-136446d42146"
	},
	"item": [
		{
			"name": "Get portal ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49a5bcd2-aa52-437e-9aa6-1b86e3865f43",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var portalId = jsonData.portalGatewayResponse[0].id;\r",
							"console.log(portalId);\r",
							"pm.globals.set(\"portalId\", portalId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "3fd34032-a166-4ecc-b15b-cef222417880",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/portalGateways",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"portalGateways"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all APIs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dd868e2c-e0da-4d2f-8433-ca7650ac93ff",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apis_to_be_published = JSON.parse(pm.variables.get(\"apis_to_be_published\"));\r",
							"console.log(apis_to_be_published);\r",
							"let apis = JSON.parse(responseBody).apiResponse;\r",
							"// console.log(apis);\r",
							"if (apis === undefined || apis === null || apis.length === 0 || apis[0].responseStatus === \"NOT_FOUND\") {\r",
							"    postman.setNextRequest(null);\r",
							"} else {\r",
							"    let apiIds = apis.map(api => api.api.id).filter(id => apis_to_be_published.includes(\"API.\" + id));\r",
							"    console.log(apiIds);\r",
							"    if (apiIds === undefined || apiIds === null || apiIds.length === 0) {\r",
							"        postman.setNextRequest(null);\r",
							"    } else {\r",
							"        let apiId = apiIds.pop();\r",
							"        let apiIdsString = JSON.stringify(apiIds);\r",
							"        pm.globals.set(\"apiIds\", apiIdsString);\r",
							"        pm.globals.set(\"apiId\", apiId);\r",
							"        postman.setNextRequest(\"Get API metadata\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "e17a1ff5-a818-4795-a7f3-fa711e9177ea",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/apis",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get API metadata",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8fd60ece-d4ab-444c-9ed5-b4b57c1c2c62",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var gatewayEndpointsList = jsonData.apiResponse.portalGatewayDataEntries.gatewayEndpointsList;\r",
							"\r",
							"console.log(gatewayEndpointsList);\r",
							"\r",
							"var gatewayEndPoints = gatewayEndpointsList.filter(function (item) {\r",
							"    return item.status == \"PUBLISHED\";\r",
							"}).map(function (item) {\r",
							"    return item.gatewayEndpoint;\r",
							"});\r",
							"\r",
							"console.log(gatewayEndPoints);\r",
							"\r",
							"pm.globals.set(\"gatewayEndPoints\", JSON.stringify(gatewayEndPoints));\r",
							"\r",
							"if (gatewayEndPoints === undefined || gatewayEndPoints === null || gatewayEndPoints.length === 0) {\r",
							"    let apiIds = JSON.parse(pm.globals.get(\"apiIds\"));\r",
							"    if (apiIds === undefined || apiIds === null || apiIds.length === 0) {\r",
							"        postman.setNextRequest(null);\r",
							"    } else {\r",
							"        let apiId = apiIds.pop();\r",
							"        let apiIdsString = JSON.stringify(apiIds);\r",
							"        pm.globals.set(\"apiIds\", apiIdsString);\r",
							"        pm.globals.set(\"apiId\", apiId);\r",
							"        postman.setNextRequest(\"Get API metadata\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f5850064-a90b-4067-895b-9d63c4129ac7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/apis/:apiId/fetchMetadata?portalGatewayId={{portalId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis",
						":apiId",
						"fetchMetadata"
					],
					"query": [
						{
							"key": "portalGatewayId",
							"value": "{{portalId}}"
						}
					],
					"variable": [
						{
							"key": "apiId",
							"value": "{{apiId}}",
							"description": "(Required) API Id for the API to be retrieved"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get communities",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "67f1cd27-dc1b-48a7-a743-931d1ed1ac19",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var communitiesList = jsonData.portalGatewayResponse.communities.portalCommunities;\r",
							"\r",
							"console.log(communitiesList);\r",
							"\r",
							"var communities = communitiesList.filter(function (item) {\r",
							"    return item.status == \"PUBLISHED\";\r",
							"}).map(function (item) {\r",
							"    return item.id;\r",
							"});\r",
							"\r",
							"console.log(communities);\r",
							"\r",
							"pm.globals.set(\"communities\", JSON.stringify(communities));"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "2e63a57b-b6a9-4566-bb7f-859b1365e253",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/portalGateways/communities?portalGatewayId={{portalId}}&apiId={{apiId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"portalGateways",
						"communities"
					],
					"query": [
						{
							"key": "portalGatewayId",
							"value": "{{portalId}}"
						},
						{
							"key": "apiId",
							"value": "{{apiId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Publish API",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "157e670b-5918-4903-82ec-7b1be34446a8",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"console.log(pm.request.body);\r",
							"console.log(pm.response.text());\r",
							"\r",
							"let apiIds = JSON.parse(pm.globals.get(\"apiIds\"));\r",
							"if (apiIds === undefined || apiIds === null || apiIds.length === 0) {\r",
							"    postman.setNextRequest(null);\r",
							"} else {\r",
							"    let apiId = apiIds.pop();\r",
							"    let apiIdsString = JSON.stringify(apiIds);\r",
							"    pm.globals.set(\"apiIds\", apiIdsString);\r",
							"    pm.globals.set(\"apiId\", apiId);\r",
							"    postman.setNextRequest(\"Get API metadata\");\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "e43dec22-eb46-4495-96d4-166d1cae0a64",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/zip",
						"disabled": true
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"communities\": {{communities}},\r\n    \"endpoints\": {{gatewayEndPoints}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/apis/:apiId/publish?portalGatewayId={{portalId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis",
						":apiId",
						"publish"
					],
					"query": [
						{
							"key": "portalGatewayId",
							"value": "{{portalId}}"
						}
					],
					"variable": [
						{
							"key": "apiId",
							"value": "{{apiId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{publisher_password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{publisher_user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "7ccce853-cc7e-408b-a709-6930461f8ec0",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c45193c2-48a0-4dc3-bbb7-9e5890813e2f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}