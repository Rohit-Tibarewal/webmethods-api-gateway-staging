{
	"info": {
		"_postman_id": "86ad86b7-978e-4c25-a326-ca7eafbccf03",
		"name": "Prepare_BUILD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "3558839-86ad86b7-978e-4c25-a326-ca7eafbccf03"
	},
	"item": [
		{
			"name": "Get all Applications",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "214c4ad6-3035-438c-82a7-44b8969e2f88",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apiResponse=JSON.parse(responseBody);\r",
							"let applications = apiResponse.applications;\r",
							"if (applications === undefined || applications === null || applications.length === 0) {\r",
							"    postman.setNextRequest(\"Get all APIs\");\r",
							"} else {\r",
							"    pm.globals.set(\"applicationId\", applications[0].id);\r",
							"\r",
							"    console.log(\"Delete application\");\r",
							"    console.log(\"ID: \" + applications[0].id);\r",
							"    console.log(\"Name: \" + applications[0].name);\r",
							"    console.log(\"Version: \" + applications[0].version);\r",
							"\r",
							"    postman.setNextRequest(\"Delete one Application\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "75fe7486-68cd-46a4-89c4-efb3293c4796",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/applications",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"applications"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "32f8c8fd-2b92-4b50-bc2a-4e9bdc5cbd21",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Applications\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "62c5f9d4-1404-446c-9be5-b188a274a450",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/applications/{{applicationId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"applications",
						"{{applicationId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all APIs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6b22da44-43c5-4bf5-b54b-df3c6060f2cd",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apis = JSON.parse(responseBody).apiResponse;\r",
							"if (apis === undefined || apis === null || apis.length === 0 || apis[0].responseStatus === \"NOT_FOUND\") {\r",
							"    postman.setNextRequest(\"Get all Scopes\");\r",
							"} else {\r",
							"    pm.globals.set(\"apiId\", apis[0].api.id);\r",
							"    if (apis[0].api.isActive) {\r",
							"        postman.setNextRequest(\"Deactivate one API\");\r",
							"        console.log(\"Deactivate and delete API\");\r",
							"    } else {\r",
							"        postman.setNextRequest(\"Delete one API\");\r",
							"        console.log(\"Delete API\");\r",
							"    }\r",
							"    console.log(\"ID: \" + apis[0].api.id);\r",
							"    console.log(\"Name: \" + apis[0].api.apiName);\r",
							"    console.log(\"Version: \" + apis[0].api.apiVersion);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "95a6070b-933d-4bfc-9bf2-09393b5e93ad",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/apis",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deactivate one API",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d1549285-3abf-4fab-98a7-25f108d380bc",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains apiResponse\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains api\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains isActive\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api.isActive).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"API is inactive\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api.isActive).to.be.false;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "af5c6fe0-6e18-4423-beac-b63756e62d0e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/apis/{{apiId}}/deactivate",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis",
						"{{apiId}}",
						"deactivate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one API",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5e544227-26b2-4ebe-8f23-39978c10010f",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all APIs\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "c02fa532-28fa-462e-9137-aba26e156dc9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/apis/{{apiId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis",
						"{{apiId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Scopes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "73984169-3680-437f-bb16-1ea043f9c5b6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let scopes = JSON.parse(responseBody).scopes;\r",
							"if (scopes === undefined || scopes === null || scopes.length === 0) {\r",
							"    postman.setNextRequest(\"Get all Aliases\");\r",
							"} else {\r",
							"    pm.globals.set(\"scopeId\", scopes[0].id);\r",
							"\r",
							"    console.log(\"Delete scope\");\r",
							"    console.log(\"ID: \" + scopes[0].id);\r",
							"    console.log(\"Name: \" + scopes[0].scopeName);\r",
							"    console.log(\"Description: \" + scopes[0].scopeDescription);\r",
							"\r",
							"    postman.setNextRequest(\"Delete one Scope\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "55e55ca5-8b58-43e7-903d-79a919e792e8",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/scopes",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"scopes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Scope",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6adb0b6f-c203-4870-ac30-fcbda2d15579",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Scopes\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "249e81e5-6441-4468-b426-5ee3ead96a69",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/scopes/{{scopeId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"scopes",
						"{{scopeId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Aliases",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df548bed-e927-4091-8566-959083705ad4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(\"Get all Strategies\");\r",
							"\r",
							"let apiResponse=JSON.parse(responseBody);\r",
							"let aliases = apiResponse.alias;\r",
							"// console.log(aliases);\r",
							"if (aliases === undefined || aliases === null) {\r",
							"    postman.setNextRequest(null);\r",
							"} else {\r",
							"    for (i in aliases) {\r",
							"//        console.log(aliases[i]);\r",
							"        if (![\"ServiceConsulDefault\",\"EurekaDefault\",\"OKTA\",\"PingFederate\",\"local\"].includes(aliases[i].id)) {\r",
							"            pm.globals.set(\"aliasId\", aliases[i].id);\r",
							"\r",
							"            console.log(\"Delete alias\");\r",
							"            console.log(\"ID: \" + aliases[i].id);\r",
							"            console.log(\"Name: \" + aliases[i].name);\r",
							"            console.log(\"Description: \" + aliases[i].description);\r",
							"\r",
							"            postman.setNextRequest(\"Delete one Alias\");\r",
							"            break;\r",
							"        }\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "79533424-825e-486f-b39d-93286fffca74",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/alias",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"alias"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Alias",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e330aa66-63d7-41e4-a948-817a6480a44c",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Aliases\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f340b647-46b3-4f76-9a91-348a814dfc34",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/alias/{{aliasId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"alias",
						"{{aliasId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Strategies",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9b96a0b8-efd9-4d13-9649-6387109c6a6c",
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apiResponse=JSON.parse(responseBody);\r",
							"let strategies = apiResponse.strategies;\r",
							"if (strategies === undefined || strategies === null || strategies.length === 0) {\r",
							"    postman.setNextRequest(null);\r",
							"} else {\r",
							"    pm.globals.set(\"strategyId\", strategies[0].id);\r",
							"\r",
							"    console.log(\"Delete strategy\");\r",
							"    console.log(\"ID: \" + strategies[0].id);\r",
							"    console.log(\"Name: \" + strategies[0].name);\r",
							"    console.log(\"Decription: \" + strategies[0].description);\r",
							"\r",
							"    postman.setNextRequest(\"Delete one Strategy\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "e0103cea-5107-4880-a6fa-bfe01362f9e5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/strategies",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"strategies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Strategy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c4c79406-f672-4ebf-a505-d8c3aa66e34c",
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Strategies\");\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "52c9f00e-b150-40e7-826c-88f4084a50e0",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Host",
						"value": "{{hostname}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{protocol}}://{{ip}}:{{port}}/rest/apigateway/strategies/{{strategyId}}",
					"protocol": "{{protocol}}",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"strategies",
						"{{strategyId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{preparer_password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{preparer_user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "1e335d61-18cb-48fa-b7d5-bda10b6568bc"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "37eb5191-b0e1-453c-beb3-b1d75656d76c"
			}
		}
	]
}