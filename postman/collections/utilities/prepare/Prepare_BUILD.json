{
	"info": {
		"_postman_id": "fd13ab55-ba74-4455-b777-5d2d864de17a",
		"name": "Prepare_BUILD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "3558839-fd13ab55-ba74-4455-b777-5d2d864de17a"
	},
	"item": [
		{
			"name": "Get all Applications",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apiResponse=JSON.parse(responseBody);\r",
							"let applications = apiResponse.applications;\r",
							"if (applications === undefined || applications === null || applications.length === 0) {\r",
							"    postman.setNextRequest(\"Get all APIs\");\r",
							"} else {\r",
							"    pm.globals.set(\"applicationId\", applications[0].id);\r",
							"\r",
							"    console.log(\"Delete application\");\r",
							"    console.log(\"ID: \" + applications[0].id);\r",
							"    console.log(\"Name: \" + applications[0].name);\r",
							"    console.log(\"Version: \" + applications[0].version);\r",
							"\r",
							"    postman.setNextRequest(\"Delete one Application\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "6b7c7aed-45c4-4187-ad0b-b63b517b5471"
					}
				}
			],
			"id": "274a9bc3-6a34-4c8b-9eee-2d1e395ee369",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/applications",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"applications"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Applications\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "103cf5f0-47b4-4bab-86d7-1d67409f3afc"
					}
				}
			],
			"id": "758658da-b523-4ebe-9dbb-27d639b3dc28",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/applications/{{applicationId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"applications",
						"{{applicationId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all APIs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apis = JSON.parse(responseBody).apiResponse;\r",
							"if (apis === undefined || apis === null || apis.length === 0 || apis[0].responseStatus === \"NOT_FOUND\") {\r",
							"    postman.setNextRequest(\"Get all Scopes\");\r",
							"} else {\r",
							"    pm.globals.set(\"apiId\", apis[0].api.id);\r",
							"    if (apis[0].api.isActive) {\r",
							"        postman.setNextRequest(\"Deactivate one API\");\r",
							"        console.log(\"Deactivate and delete API\");\r",
							"    } else {\r",
							"        postman.setNextRequest(\"Delete one API\");\r",
							"        console.log(\"Delete API\");\r",
							"    }\r",
							"    console.log(\"ID: \" + apis[0].api.id);\r",
							"    console.log(\"Name: \" + apis[0].api.apiName);\r",
							"    console.log(\"Version: \" + apis[0].api.apiVersion);\r",
							"}"
						],
						"type": "text/javascript",
						"id": "1f188dff-156c-4415-9545-08247d11293f"
					}
				}
			],
			"id": "dfba0433-dd36-491d-a490-85778b97ddf0",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/apis",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deactivate one API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains apiResponse\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains api\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains isActive\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api.isActive).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"API is inactive\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api.isActive).to.be.false;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"id": "5871d91b-7026-40bc-9493-c57f468d1ab4"
					}
				}
			],
			"id": "bf1a4bda-b983-44e6-b18c-5da2a4ca15af",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/apis/{{apiId}}/deactivate",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis",
						"{{apiId}}",
						"deactivate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all APIs\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "9ae9ba2d-ac97-4816-b66d-bfa35f1fc667"
					}
				}
			],
			"id": "71fafe40-27e3-4eb8-b5f8-e88062af68b5",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/apis/{{apiId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis",
						"{{apiId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Scopes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let scopes = JSON.parse(responseBody).scopes;\r",
							"if (scopes === undefined || scopes === null || scopes.length === 0) {\r",
							"    postman.setNextRequest(\"Get all Aliases\");\r",
							"} else {\r",
							"    pm.globals.set(\"scopeId\", scopes[0].id);\r",
							"\r",
							"    console.log(\"Delete scope\");\r",
							"    console.log(\"ID: \" + scopes[0].id);\r",
							"    console.log(\"Name: \" + scopes[0].scopeName);\r",
							"    console.log(\"Description: \" + scopes[0].scopeDescription);\r",
							"\r",
							"    postman.setNextRequest(\"Delete one Scope\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "9ee4105f-b725-400b-b33a-805a66ea2aa8"
					}
				}
			],
			"id": "891d4283-e511-45ab-979e-913e55bb6fe6",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/scopes",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"scopes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Scope",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Scopes\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "04dde855-47a1-4f9f-829b-7042eab42ae4"
					}
				}
			],
			"id": "c2afd9e7-ec86-4892-b074-cd390633c0ca",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/scopes/{{scopeId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"scopes",
						"{{scopeId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Aliases",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(\"Get all Strategies\");\r",
							"\r",
							"let apiResponse=JSON.parse(responseBody);\r",
							"let aliases = apiResponse.alias;\r",
							"// console.log(aliases);\r",
							"if (aliases === undefined || aliases === null) {\r",
							"    postman.setNextRequest(null);\r",
							"} else {\r",
							"    for (i in aliases) {\r",
							"//        console.log(aliases[i]);\r",
							"        if (![\"ServiceConsulDefault\",\"EurekaDefault\",\"OKTA\",\"PingFederate\",\"local\"].includes(aliases[i].id)) {\r",
							"            pm.globals.set(\"aliasId\", aliases[i].id);\r",
							"\r",
							"            console.log(\"Delete alias\");\r",
							"            console.log(\"ID: \" + aliases[i].id);\r",
							"            console.log(\"Name: \" + aliases[i].name);\r",
							"            console.log(\"Description: \" + aliases[i].description);\r",
							"\r",
							"            postman.setNextRequest(\"Delete one Alias\");\r",
							"            break;\r",
							"        }\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript",
						"id": "25db974a-bc11-4a6d-99f3-ede5d0d32503"
					}
				}
			],
			"id": "9e4062dd-7462-434a-be28-8a33ad164346",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/alias",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"alias"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Alias",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Aliases\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "3eda6f30-be8d-4900-aba7-29ed5d1fc2ea"
					}
				}
			],
			"id": "4acd46d5-359b-4c14-b644-abb18a8bfcc3",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/alias/{{aliasId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"alias",
						"{{aliasId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Strategies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apiResponse=JSON.parse(responseBody);\r",
							"let strategies = apiResponse.strategies;\r",
							"if (strategies === undefined || strategies === null || strategies.length === 0) {\r",
							"    postman.setNextRequest(null);\r",
							"} else {\r",
							"    pm.globals.set(\"strategyId\", strategies[0].id);\r",
							"\r",
							"    console.log(\"Delete strategy\");\r",
							"    console.log(\"ID: \" + strategies[0].id);\r",
							"    console.log(\"Name: \" + strategies[0].name);\r",
							"    console.log(\"Decription: \" + strategies[0].description);\r",
							"\r",
							"    postman.setNextRequest(\"Delete one Strategy\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "5c0ecb94-8e08-4fc5-8a93-6541c9aef0f4"
					}
				}
			],
			"id": "ec8d95f4-3d38-47e3-ab80-cac88a8005ff",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/strategies",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"strategies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Strategy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Strategies\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "0e6a472c-c763-4f19-a9b0-cd18a79dc428"
					}
				}
			],
			"id": "cddd7c60-4b72-44d6-87ef-e04d6c405ba8",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Host",
						"value": "{{hostname}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/strategies/{{strategyId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"strategies",
						"{{strategyId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{preparer_password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{preparer_user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "7618efc5-6760-406f-a068-c776045b9528"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "4a9bb949-b1c6-4776-90b1-8c68aff848b7"
			}
		}
	]
}