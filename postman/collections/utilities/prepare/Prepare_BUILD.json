{
	"info": {
		"_postman_id": "90c2424c-d7bb-44cb-8798-68b27e48eb09",
		"name": "Prepare_BUILD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "3558839-90c2424c-d7bb-44cb-8798-68b27e48eb09"
	},
	"item": [
		{
			"name": "Get all Applications",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apiResponse=JSON.parse(responseBody);\r",
							"let applications = apiResponse.applications;\r",
							"if (applications === undefined || applications === null || applications.length === 0) {\r",
							"    postman.setNextRequest(\"Get all APIs\");\r",
							"} else {\r",
							"    pm.globals.set(\"applicationId\", applications[0].id);\r",
							"\r",
							"    console.log(\"Delete application\");\r",
							"    console.log(\"ID: \" + applications[0].id);\r",
							"    console.log(\"Name: \" + applications[0].name);\r",
							"    console.log(\"Version: \" + applications[0].version);\r",
							"\r",
							"    postman.setNextRequest(\"Delete one Application\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "5e22999f-4443-4b4d-98db-0e4b1782c509"
					}
				}
			],
			"id": "6f39ac5c-b585-473d-b83e-59fbf1d2cf01",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/applications",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"applications"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Applications\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "86d87dc0-fa4c-42e7-a6be-7b492d11fb61"
					}
				}
			],
			"id": "30abcd7d-8eaf-4e39-b71b-40a3ffb7f7d5",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/applications/{{applicationId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"applications",
						"{{applicationId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all APIs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apis = JSON.parse(responseBody).apiResponse;\r",
							"if (apis === undefined || apis === null || apis.length === 0 || apis[0].responseStatus === \"NOT_FOUND\") {\r",
							"    postman.setNextRequest(\"Get all Scopes\");\r",
							"} else {\r",
							"    pm.globals.set(\"apiId\", apis[0].api.id);\r",
							"    if (apis[0].api.isActive) {\r",
							"        postman.setNextRequest(\"Deactivate one API\");\r",
							"        console.log(\"Deactivate and delete API\");\r",
							"    } else {\r",
							"        postman.setNextRequest(\"Delete one API\");\r",
							"        console.log(\"Delete API\");\r",
							"    }\r",
							"    console.log(\"ID: \" + apis[0].api.id);\r",
							"    console.log(\"Name: \" + apis[0].api.apiName);\r",
							"    console.log(\"Version: \" + apis[0].api.apiVersion);\r",
							"}"
						],
						"type": "text/javascript",
						"id": "f45ea399-6a02-4b8d-97ff-0cbefdb42ca5"
					}
				}
			],
			"id": "265266ce-58fb-4eca-9d26-846084c23acf",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/apis",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deactivate one API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains apiResponse\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains api\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains isActive\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api.isActive).to.exist;\r",
							"});\r",
							"\r",
							"pm.test(\"API is inactive\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.apiResponse.api.isActive).to.be.false;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"id": "bbb6c65d-eaea-40a1-9c63-e7108b369cb1"
					}
				}
			],
			"id": "01c52661-36c7-4738-874e-55c0a0357d04",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/apis/{{apiId}}/deactivate",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis",
						"{{apiId}}",
						"deactivate"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all APIs\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "2b5390d2-d6e6-44a6-8cc2-06c09d130ff4"
					}
				}
			],
			"id": "74111839-5460-4e95-bf06-e6be68c2da6a",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/apis/{{apiId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"apis",
						"{{apiId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Scopes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let scopes = JSON.parse(responseBody).scopes;\r",
							"if (scopes === undefined || scopes === null || scopes.length === 0) {\r",
							"    postman.setNextRequest(\"Get all Aliases\");\r",
							"} else {\r",
							"    pm.globals.set(\"scopeId\", scopes[0].id);\r",
							"\r",
							"    console.log(\"Delete scope\");\r",
							"    console.log(\"ID: \" + scopes[0].id);\r",
							"    console.log(\"Name: \" + scopes[0].scopeName);\r",
							"    console.log(\"Description: \" + scopes[0].scopeDescription);\r",
							"\r",
							"    postman.setNextRequest(\"Delete one Scope\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "007e2bfd-1125-4d1d-8139-adbdd410241a"
					}
				}
			],
			"id": "09777e5c-f545-42d3-a887-6f4b13bb97c9",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/scopes",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"scopes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Scope",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Scopes\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "dba1fe86-5213-4d61-b4cf-e8fa7e80e62f"
					}
				}
			],
			"id": "1ef4dcf6-b697-468a-ab7d-3acf71f3f0ee",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/scopes/{{scopeId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"scopes",
						"{{scopeId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Aliases",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(\"Get all Strategies\");\r",
							"\r",
							"let apiResponse=JSON.parse(responseBody);\r",
							"let aliases = apiResponse.alias;\r",
							"// console.log(aliases);\r",
							"if (aliases === undefined || aliases === null) {\r",
							"    postman.setNextRequest(null);\r",
							"} else {\r",
							"    for (i in aliases) {\r",
							"//        console.log(aliases[i]);\r",
							"        if (![\"ServiceConsulDefault\",\"EurekaDefault\",\"OKTA\",\"PingFederate\",\"local\"].includes(aliases[i].id)) {\r",
							"            pm.globals.set(\"aliasId\", aliases[i].id);\r",
							"\r",
							"            console.log(\"Delete alias\");\r",
							"            console.log(\"ID: \" + aliases[i].id);\r",
							"            console.log(\"Name: \" + aliases[i].name);\r",
							"            console.log(\"Description: \" + aliases[i].description);\r",
							"\r",
							"            postman.setNextRequest(\"Delete one Alias\");\r",
							"            break;\r",
							"        }\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript",
						"id": "e0147698-899b-4444-a4e2-bbc5f7d75194"
					}
				}
			],
			"id": "1c218d09-ffc1-4806-b112-995c41feef57",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/alias",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"alias"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Alias",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Aliases\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "c9207032-750c-4121-af0e-e5b7d2122069"
					}
				}
			],
			"id": "12cb15bc-ddf0-435a-aa1e-0a9651157fd1",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/alias/{{aliasId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"alias",
						"{{aliasId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all Strategies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"let apiResponse=JSON.parse(responseBody);\r",
							"let strategies = apiResponse.strategies;\r",
							"if (strategies === undefined || strategies === null || strategies.length === 0) {\r",
							"    postman.setNextRequest(null);\r",
							"} else {\r",
							"    pm.globals.set(\"strategyId\", strategies[0].id);\r",
							"\r",
							"    console.log(\"Delete strategy\");\r",
							"    console.log(\"ID: \" + strategies[0].id);\r",
							"    console.log(\"Name: \" + strategies[0].name);\r",
							"    console.log(\"Decription: \" + strategies[0].description);\r",
							"\r",
							"    postman.setNextRequest(\"Delete one Strategy\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "4c7e3cda-651a-4f7d-90d6-b6f83cfa8664"
					}
				}
			],
			"id": "d6b0e92d-fc4a-4dd2-93e3-c3a64d02cf12",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Host",
						"value": "{{hostname}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/strategies",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"strategies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete one Strategy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"if (pm.response.code === 204) {\r",
							"    postman.setNextRequest(\"Get all Strategies\");\r",
							"}"
						],
						"type": "text/javascript",
						"id": "468adbbf-ae57-46fd-9b60-ae7c29f2d17e"
					}
				}
			],
			"id": "ff173e19-6b97-4fbe-8965-4891f78d17eb",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Host",
						"value": "{{hostname}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{ip}}:{{port}}/rest/apigateway/strategies/{{strategyId}}",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"port": "{{port}}",
					"path": [
						"rest",
						"apigateway",
						"strategies",
						"{{strategyId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{preparer_password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{preparer_user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "02f8d170-d003-4fda-902f-39a687276866"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "74002996-e08a-42f3-b1e0-b28c14124c6d"
			}
		}
	]
}